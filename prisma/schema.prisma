// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int         @id @default(autoincrement())
  code        String      @unique
  description String
  price       Decimal     @db.Decimal(10, 2)
  stock       Stock       @relation(fields: [stockId], references: [id])
  stockId     Int         @unique
  quoteItems  QuoteItem[]
}

model Stock {
  id              Int      @id @default(autoincrement())
  minQuantity     Int
  maxQuantity     Int
  currentQuantity Int
  updatedAt       DateTime @updatedAt
  product         Product? @relation
  productId       Int      @unique
  stockEntries    StockEntry[]
}

model StockEntry {
  id        Int      @id @default(autoincrement())
  quantity  Int
  entryDate DateTime @default(now())
  stock     Stock   @relation(fields: [stockId], references: [id])
  stockId   Int
}

model Quote {
  id                Int      @id @default(autoincrement())
  code              String   @unique
  date              DateTime @default(now())
  clientName        String
  country           String
  state             String
  stateTaxPercent   Decimal  @db.Decimal(5, 2)
  federalTaxPercent Decimal  @db.Decimal(5, 2)

  discountPercent Decimal @db.Decimal(5, 2)
  discountAmount  Decimal @db.Decimal(12, 2)

  totalValue Decimal @db.Decimal(12, 2)
  finalValue Decimal @db.Decimal(12, 2)

  status QuoteStatus
  items  QuoteItem[]
}

model QuoteItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  unitPrice Decimal @db.Decimal(10, 2)
  total     Decimal @db.Decimal(12, 2)
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quote     Quote   @relation(fields: [quoteId], references: [id])
  quoteId   Int
}

enum QuoteStatus {
  PENDING
  COMPLETED
  EXPIRED
}
